/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AS";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <135>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };
        grave_escape: grave_escape {
            compatible = "zmk,behavior-mod-morph";
            label = "GRAVE_ESCAPE";
            bindings =
                <&kp ESCAPE>,
                <&kp GRAVE>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LSFT|MOD_LGUI|MOD_RCTL|MOD_RALT)>;
            keep-mods = <(MOD_LCTL|MOD_LSFT|MOD_LGUI)>;
        };
        bspc_del: bspc_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BSPC_DEL";
            bindings =
                <&kp BACKSPACE>,
                <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LCTL|MOD_LGUI)>;
            keep-mods = <(MOD_LSFT|MOD_LCTL)>;
        };
        sh_cp: shift_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_CAPS";
            #binding-cells = <0>;
            bindings =
                <&sk LEFT_SHIFT>,
                <&caps_word>,
                <&sk LEFT_CONTROL>;
        };
        sft_ctrl: sft_ctrl {
            compatible = "zmk,behavior-tap-dance";
            label = "SFT_CTRL";
            #binding-cells = <0>;
            bindings =
                <&sk RIGHT_SHIFT>,
                <&sk RIGHT_CONTROL>;
        };
        vol_dw_mt: vol_dw_mt {
            compatible = "zmk,behavior-mod-morph";
            label = "VOL_DW_MT";
            bindings =
                <&kp C_VOL_DN>,
                <&kp K_MUTE>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LALT|MOD_LSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        control_layer {
            bindings = <&tog 3>;
            key-positions = <5 6>;
            layers = <0 3>;
        };

        combo_lbrc {
            bindings = <&kp LBRC>;
            key-positions = <1 13>;
        };

        combo_lbkt {
            bindings = <&kp LBKT>;
            key-positions = <2 14>;
        };

        combo_eq {
            bindings = <&kp EQUAL>;
            key-positions = <22 23>;
        };

        combo_par {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <3 15>;
        };
    };

    macros {
        mc_clip: mc_clip {
            compatible = "zmk,behavior-macro";
            label = "MC_CLIP";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(N4))>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
      &mt LC(LSHFT) TAB  &kp Q  &kp W     &kp E  &kp R                       &kp T      &kp Y  &kp U      &kp I    &kp O     &kp P       &bspc_del
&mt LEFT_CONTROL ESCAPE  &kp A  &kp S     &kp D  &kp F                       &kp G      &kp H  &kp J      &kp K    &kp L  &kp SEMI   &mt RCTRL SQT
       &mt LSHIFT GRAVE  &kp Z  &kp X     &kp C  &kp V                       &kp B      &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH  &mt RSHFT BSLH
                                       &kp LGUI  &mo 1  &mt LS(LA(LC(LGUI))) SPACE    &kp RET  &mo 2   &kp RALT
            >;
        };

        navigation {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans   &kp F1   &kp F2    &kp F3  &kp F4   &kp F5    &kp LG(TAB)  &kp LG(GRAVE)  &kp LC(TAB)  &kp LS(LG(N3))                  &kp C_PP      &kp K_APP
&trans   &kp F6   &kp F7    &kp F8  &kp F9  &kp F10       &kp LEFT       &kp DOWN       &kp UP       &kp RIGHT              &kp C_VOL_UP    &kp PAGE_UP
&trans  &kp F11  &kp F12    &trans  &trans   &trans       &kp HOME        &kp END   &kp C_PREV      &kp C_NEXT  &mt K_MUTE C_VOLUME_DOWN  &kp PAGE_DOWN
                          &kp LGUI  &trans   &trans        &kp RET         &trans     &kp RALT
            >;

            label = "nav";
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR   &kp BSPC
&kp LCTRL    &kp N1  &kp N2    &kp N3    &kp N4     &kp N5    &kp MINUS  &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT    &kp N6  &kp N7    &kp N8    &kp N9     &kp N0    &kp UNDER   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI    &trans  &kp SPACE      &kp RET     &trans         &kp RALT
            >;

            label = "raise!";
        };

        control {
            bindings = <
&trans  &kp SLASH  &trans  &trans  &trans  &bt BT_PRV    &kp N7  &kp N8   &kp N9  &trans  &trans  &trans
&trans   &kp STAR  &trans  &trans  &trans  &bt BT_NXT    &kp N4  &kp N5   &kp N6  &trans  &trans  &trans
&trans     &trans  &trans  &trans  &trans  &bt BT_CLR    &kp N1  &kp N2   &kp N3  &trans  &trans  &trans
                           &trans  &trans      &trans    &trans  &kp N0  &kp DOT
            >;

            label = "control";
        };
    };
};
